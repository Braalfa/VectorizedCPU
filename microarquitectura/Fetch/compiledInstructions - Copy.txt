001100110000000000000011 ; mover 3 a 0011
001010000011000000000000 ; load a 1000 de lo que hay en 0011 (valor 3)
001100010000000000000010 ; mover 2 a 0001
101000001000000100000000 ; 0000 = 1000 / 0001
001100100000000000000100 ; mover 4 a 0010
000100000010000000000000 ; store 0000 (valor division) en 0010 (valor 4) 
010000000010000000000000 ; out de direccion 0010 (valor 4)
001100110000000000000110 ; mover 6 a 0011
001111110000000000000000 ; mover 0 a 1111
001110110000000000000001 ; mover 1 a 1011
010101100011001000000000 ; *0110 = *0011 + *0010 (6+4=10)
011100010000100000000000 ; *0001 = *0000 + *1000 (vector)
000100000011000100000000 ; store 0001 (valor division) en 0011 (valor 6) 
010000000011000000000000 ; out de direccion 0011 (valor 6)
011001100110101100000000 ; 0110 = 0110 - 1011 (1)
101100001111011000000000 ; cmp 1111 y 0110
110000000000000000111111 ; si 0110 == 1111 (0) salta a infinito (termina)  
111000000000000000001101 ; jump a ultimo out
