011000110000000000000000000011 ; mover 3 a 011 ;
000101000110000000000000000000 ; load a 100 de lo que hay en 011 (valor 3) 
011000010000000000100000000000 ; mover 2 () a 001 
001100001000010000000000000000 ; 000 = 100 * 001;
011000100000000000000000000100 ; mover 4 a 010;
000010000100000000000000000000 ; store 000 (valor division) en 010 (valor 4) 
010010000100000000000000000000 ; out de direccion 010 (valor 4)
011000110000000000000000000110 ; mover 6 a 011
011001110000000000000000000000 ; mover 0 a 111
011001010000000000000000000001 ; mover 1 a 101
010101100110100000000000000000 ; *110 = *011 + *010 (6+4=10)
001000010001000000000000000000 ; *001 = *000 + *100 (vector)
000010000110010000000000000000 ; store 001 (valor) en 011 (valor 6) 
010010000110000000000000000000 ; out de direccion 011 (valor 6)
010111101101010000000000000000 ; 110 = 110 - 101 (1)
011010001111100000000000000000 ; cmp 111 y 110
011110000000000000000001111111 ; si 110 == 111 (0) salta a infinito (termina)  
100000000000000000000000001101 ; jump a ultimo out
